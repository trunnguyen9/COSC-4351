<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>EvilDICOM.Core</name>
  </assembly>
  <members>
    <member name="M:EvilDICOM.Core.Interfaces.IDICOMMessage.Write">
    </member>
    <member name="N:EvilDICOM.Core.Element">
    </member>
    <member name="T:EvilDICOM.Core.Element.Time">
    </member>
    <member name="M:EvilDICOM.Core.Element.Time.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.Time">Time</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.Time.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.Time">Time</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.Time.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Element.UnlimitedText">
    </member>
    <member name="M:EvilDICOM.Core.Element.UnlimitedText.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.UnlimitedText">UnlimitedText</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.UnlimitedText.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.UnlimitedText">UnlimitedText</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.UnlimitedText.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="N:EvilDICOM.Core.IO.Writing">
    </member>
    <member name="T:EvilDICOM.Core.IO.Writing.DICOMPreambleWriter">
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMPreambleWriter.Write(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter)">
      <param name="dw">
</param>
    </member>
    <member name="N:EvilDICOM.Core.IO.Data">
    </member>
    <member name="T:EvilDICOM.Core.IO.Data.DICOMString">
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.DICOMString.Read(System.Byte[])">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.DICOMString.Write(System.String)">
      <param name="data">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.OtherWordString">
    </member>
    <member name="M:EvilDICOM.Core.Element.OtherWordString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.OtherWordString">OtherWordString</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.OtherWordString.#ctor(EvilDICOM.Core.Element.Tag,System.Byte[])">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.OtherWordString">OtherWordString</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.OtherWordString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Element.ElementFactory">
    </member>
    <member name="M:EvilDICOM.Core.Element.ElementFactory.GenerateElement(EvilDICOM.Core.Element.AbstractElement,System.Object,EvilDICOM.Core.Enums.TransferSyntax)">
      <param name="d">
</param>
      <param name="data">
</param>
      <param name="syntax">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.OtherFloatString">
    </member>
    <member name="M:EvilDICOM.Core.Element.OtherFloatString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.OtherFloatString">OtherFloatString</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.OtherFloatString.#ctor(EvilDICOM.Core.Element.Tag,System.Byte[])">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.OtherFloatString">OtherFloatString</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.OtherFloatString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Data.StringDataParser">
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.StringDataParser.ParseAgeString(System.String)">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.StringDataParser.ParseDate(System.String)">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.StringDataParser.ParseDateTime(System.String)">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.StringDataParser.ParseDecimalString(System.String)">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.StringDataParser.ParseIntegerString(System.String)">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.StringDataParser.ParseTime(System.String)">
      <param name="data">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.FloatingPointSingle">
    </member>
    <member name="M:EvilDICOM.Core.Element.FloatingPointSingle.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.FloatingPointSingle">FloatingPointSingle</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.FloatingPointSingle.#ctor(EvilDICOM.Core.Element.Tag,System.Nullable{System.Single})">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.FloatingPointSingle">FloatingPointSingle</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.FloatingPointSingle.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="N:EvilDICOM.Core.Helpers">
    </member>
    <member name="T:EvilDICOM.Core.Helpers.PersonNameHelper">
    </member>
    <member name="M:EvilDICOM.Core.Helpers.PersonNameHelper.GetFirstName(System.String)">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.Helpers.PersonNameHelper.SetFirstName(System.String,System.String)">
      <param name="data">
</param>
      <param name="name">
</param>
    </member>
    <member name="M:EvilDICOM.Core.Helpers.PersonNameHelper.GetMiddleName(System.String)">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.Helpers.PersonNameHelper.SetMiddleName(System.String,System.String)">
      <param name="data">
</param>
      <param name="name">
</param>
    </member>
    <member name="M:EvilDICOM.Core.Helpers.PersonNameHelper.GetLastName(System.String)">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.Helpers.PersonNameHelper.SetLastName(System.String,System.String)">
      <param name="data">
</param>
      <param name="name">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Helpers.TransferSyntaxHelper">
    </member>
    <member name="M:EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax(EvilDICOM.Core.Interfaces.IDICOMElement)">
      <summary>
Converts the string in the Transfer syntax element to the transfer syntax enum for reading the file</summary>
      <returns>
the transfer syntax in enum format</returns>
      <param name="el">
the transfer syntax element</param>
    </member>
    <member name="M:EvilDICOM.Core.Helpers.TransferSyntaxHelper.GetSyntax(System.String)">
      <summary>
Converts the string to the transfer syntax enum for reading the file</summary>
      <returns>
the transfer syntax in enum format</returns>
      <param name="syntaxUID">
</param>
    </member>
    <member name="M:EvilDICOM.Core.Helpers.TransferSyntaxHelper.SetSyntax(EvilDICOM.Core.DICOMObject,EvilDICOM.Core.Enums.TransferSyntax)">
      <summary>
Sets the transfer syntax of the DICOM object</summary>
      <param name="dicom">
the DICOM object to set syntax</param>
      <param name="selector">
the transfer syntax to set</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.AttributeTag">
    </member>
    <member name="M:EvilDICOM.Core.Element.AttributeTag.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.AttributeTag">AttributeTag</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.AttributeTag.#ctor(EvilDICOM.Core.Element.Tag,EvilDICOM.Core.Element.Tag)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.AttributeTag">AttributeTag</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.AttributeTag.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Element.Tag">
    </member>
    <member name="M:EvilDICOM.Core.Element.Tag.#ctor(System.String,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.Tag">Tag</see> class.</summary>
      <param name="group">
</param>
      <param name="element">
</param>
    </member>
    <member name="M:EvilDICOM.Core.Element.Tag.#ctor(System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.Tag">Tag</see> class.</summary>
      <param name="completeID">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.Tag.CompleteID">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Element.Tag.Element">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Element.Tag.Group">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="N:EvilDICOM.Core.Extensions">
    </member>
    <member name="T:EvilDICOM.Core.Extensions.ByteExtensions">
    </member>
    <member name="M:EvilDICOM.Core.Extensions.ByteExtensions.GetBit(System.Byte,System.Int32)">
      <param name="b">
</param>
      <param name="bitNumber">
</param>
    </member>
    <member name="M:EvilDICOM.Core.Extensions.ByteExtensions.Append(System.Byte[],System.Byte[])">
      <param name="first">
</param>
      <param name="toAppend">
</param>
    </member>
    <member name="T:EvilDICOM.Core.IO.Writing.DICOMBinaryWriter">
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMBinaryWriter.#ctor(System.String)">
      <summary>
Constructs a new writer from a file path.</summary>
      <param name="filePath">
path to the file to be written</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMBinaryWriter.#ctor(System.IO.Stream)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.IO.Writing.DICOMBinaryWriter">DICOMBinaryWriter</see> class.</summary>
      <param name="stream">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMBinaryWriter.Write(System.Byte)">
      <param name="b">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMBinaryWriter.Write(System.Byte[])">
      <param name="bytes">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMBinaryWriter.Write(System.Char[])">
      <param name="chars">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMBinaryWriter.Write(System.String)">
      <param name="chars">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMBinaryWriter.WriteNullBytes(System.Int32)">
      <param name="numberToWrite">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMBinaryWriter.Dispose">
    </member>
    <member name="N:EvilDICOM.Core.IO.Reading">
    </member>
    <member name="T:EvilDICOM.Core.IO.Reading.TagReader">
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.TagReader.ReadLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <param name="dr">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.TagReader.ReadLittleEndian(System.Byte[])">
      <param name="tagLE">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.TagReader.ReadBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <param name="dr">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.TagReader.ReadBigEndian(System.Byte[])">
      <param name="tagBE">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Extensions.StringExtensions">
    </member>
    <member name="M:EvilDICOM.Core.Extensions.StringExtensions.ToUpperUnderscore(System.String)">
      <param name="camelCase">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.LongText">
    </member>
    <member name="M:EvilDICOM.Core.Element.LongText.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.LongText">LongText</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.LongText.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.LongText">LongText</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.LongText.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Element.UniqueIdentifier">
    </member>
    <member name="M:EvilDICOM.Core.Element.UniqueIdentifier.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.UniqueIdentifier">UniqueIdentifier</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.UniqueIdentifier.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.UniqueIdentifier">UniqueIdentifier</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.UniqueIdentifier.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Data.StringDataComposer">
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeAgeString(EvilDICOM.Core.Element.Age)">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDate(System.Nullable{System.DateTime})">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDateTime(System.Nullable{System.DateTime})">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeDecimalString(System.Double[])">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeIntegerString(System.Int32[])">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.StringDataComposer.ComposeTime(System.Nullable{System.DateTime})">
      <param name="data">
</param>
    </member>
    <member name="T:EvilDICOM.Core.IO.Data.LittleEndianWriter">
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.LittleEndianWriter.WriteTag(EvilDICOM.Core.Element.Tag)">
      <param name="tag">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.LittleEndianWriter.WriteSinglePrecision(System.Nullable{System.Single})">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.LittleEndianWriter.WriteDoublePrecision(System.Nullable{System.Double})">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.LittleEndianWriter.WriteSignedLong(System.Nullable{System.Int32})">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.LittleEndianWriter.WriteUnsignedLong(System.Nullable{System.UInt32})">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.LittleEndianWriter.WriteSignedShort(System.Nullable{System.Int16})">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.LittleEndianWriter.WriteUnsignedShort(System.Nullable{System.UInt16})">
      <param name="data">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Helpers.EnumHelper">
    </member>
    <member name="M:EvilDICOM.Core.Helpers.EnumHelper.StringToEnum``1(System.String)">
      <param name="name">
</param>
    </member>
    <member name="T:EvilDICOM.Core.IO.Reading.VRReader">
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.VRReader.Read(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <param name="dr">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Helpers.ByteHelper">
    </member>
    <member name="M:EvilDICOM.Core.Helpers.ByteHelper.ByteArrayToHexString(System.Byte[])">
      <summary>
This method converts an array of bytes to a hexadecimal string</summary>
      <returns>
a hexadecimal string representing the array of bytes passed in</returns>
      <param name="Bytes">
the array of bytes to be converted</param>
    </member>
    <member name="M:EvilDICOM.Core.Helpers.ByteHelper.ByteToHexString(System.Byte)">
      <summary>
This method converts an array of bytes to a hexadecimal string</summary>
      <returns>
a hexadecimal string representing the array of bytes passed in</returns>
      <param name="b">
</param>
    </member>
    <member name="M:EvilDICOM.Core.Helpers.ByteHelper.HexStringToByteArray(System.String)">
      <summary>
This method converts a hexadecimal string to an array of bytes.</summary>
      <returns>
an array of bytes representing the hexadecimal string passed in</returns>
      <param name="hexString">
the hexadecimal string to be converted</param>
    </member>
    <member name="M:EvilDICOM.Core.Helpers.ByteHelper.GetHexStringArray(System.Byte[])">
      <param name="bytes">
</param>
    </member>
    <member name="M:EvilDICOM.Core.Helpers.ByteHelper.AreEqual(System.Byte[],System.Byte[])">
      <param name="bytes">
</param>
      <param name="toCompare">
</param>
    </member>
    <member name="T:EvilDICOM.Core.IO.Writing.LengthWriter">
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.LengthWriter.WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,System.Int32,System.Int32)">
      <param name="dw">
</param>
      <param name="length">
</param>
      <param name="numberOfBytes">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.LengthWriter.WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Enums.VR,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,System.Int32)">
      <param name="dw">
</param>
      <param name="vr">
</param>
      <param name="settings">
</param>
      <param name="length">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.LengthWriter.WriteBigEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Enums.VR,System.Int32)">
      <param name="dw">
</param>
      <param name="vr">
</param>
      <param name="length">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.LengthWriter.WriteBigEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,System.Int32,System.Int32)">
      <param name="dw">
</param>
      <param name="length">
</param>
      <param name="numberOfBytes">
</param>
    </member>
    <member name="T:EvilDICOM.Core.IO.Reading.DICOMBinaryReader">
      <summary>
A wrapper for the Binary Reader class that is specific to DICOM.</summary>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.#ctor(System.String)">
      <summary>
Constructs a new reader from a file path.</summary>
      <param name="filePath">
path to the file to be read</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.#ctor(System.Byte[])">
      <summary>
Constructs a new reader from a byte array.</summary>
      <param name="byteStream">
the byte array to be read</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.ReadBytes(System.Int32)">
      <summary>
Reads the specified number of bytes</summary>
      <returns>
the read bytes</returns>
      <param name="count">
the number of bytes to be read</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.Take(System.Int32)">
      <summary>
Reads the specified number of bytes (shorthand for ReadBytes method).</summary>
      <returns>
the read bytes</returns>
      <param name="count">
the number of bytes to be read</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.Peek(System.Int32)">
      <param name="count">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.GetSubStream(System.Int32)">
      <summary>
Creates a new stream that is trimmed to the specification length.</summary>
      <param name="substreamLength">
the number of bytes to include in the new stream (starting from the current position)</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.ReadChars(System.Int32)">
      <summary>
Reads the specified number of chars</summary>
      <returns>
the read chars</returns>
      <param name="count">
the number of chars to be read</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.ReadString(System.Int32)">
      <summary>
Reads the specified number of chars and converts to a string</summary>
      <returns>
the read chars</returns>
      <param name="length">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.ReadBytes(System.Byte[],System.Int32,System.Int32)">
      <param name="buffer">
</param>
      <param name="index">
</param>
      <param name="count">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.Skip(System.Int32)">
      <param name="count">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.Dispose">
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.IndexOf(System.Byte[])">
      <summary>
Will return the index of a given byte pattern in the byte stream</summary>
      <returns>
the index of the pattern</returns>
      <param name="bytePattern">
the pattern to be found</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.Reset">
    </member>
    <member name="P:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.StreamPosition">
      <summary>
Returns the current position of the byte stream</summary>
    </member>
    <member name="P:EvilDICOM.Core.IO.Reading.DICOMBinaryReader.StreamLength">
      <summary>
Returnts the length of the byte stream</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Reading.DataReader">
      <summary>
Reads the byte data from a DICOM element</summary>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DataReader.ReadLittleEndian(System.Int32,EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)">
      <summary>
Reads the data from an element encoded in little endian byte order</summary>
      <returns>
the data from this element</returns>
      <param name="lengthToRead">
the length of the data</param>
      <param name="dr">
the binary reader which is reading the DICOM object</param>
      <param name="syntax">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DataReader.ReadBigEndian(System.Int32,EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <summary>
Reads the data from an element encoded in big endian byte order</summary>
      <returns>
the data from this element</returns>
      <param name="lengthToRead">
the length of the data</param>
      <param name="dr">
the binary reader which is reading the DICOM object</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.LongString">
    </member>
    <member name="M:EvilDICOM.Core.Element.LongString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.LongString">LongString</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.LongString.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.LongString">LongString</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.LongString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Writing.SequenceWriter">
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.SequenceWriter.WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.Interfaces.IDICOMElement)">
      <param name="dw">
</param>
      <param name="settings">
</param>
      <param name="toWrite">
</param>
    </member>
    <member name="T:EvilDICOM.Core.IO.Writing.DICOMTagWriter">
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian(EvilDICOM.Core.Element.Tag)">
      <param name="tag">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Element.Tag)">
      <param name="dw">
</param>
      <param name="tag">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian(EvilDICOM.Core.Element.Tag)">
      <param name="tag">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMTagWriter.WriteBigEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Element.Tag)">
      <param name="dw">
</param>
      <param name="tag">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.Unknown">
    </member>
    <member name="M:EvilDICOM.Core.Element.Unknown.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.Unknown">Unknown</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.Unknown.#ctor(EvilDICOM.Core.Element.Tag,System.Byte[])">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.Unknown">Unknown</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.Unknown.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="N:EvilDICOM.Core">
    </member>
    <member name="T:EvilDICOM.Core.DICOMObject">
      <summary>
The DICOM object is a container for DICOM elements. It contains methods for finding elements easily from within the structure.</summary>
    </member>
    <member name="M:EvilDICOM.Core.DICOMObject.#ctor(System.Collections.Generic.List{EvilDICOM.Core.Interfaces.IDICOMElement})">
      <summary>
Contructor</summary>
      <param name="elements">
a list of elements to be included in the object</param>
    </member>
    <member name="M:EvilDICOM.Core.DICOMObject.Add(EvilDICOM.Core.Interfaces.IDICOMElement)">
      <summary>
Adds an element to the DICOM object</summary>
      <param name="el">
a DICOM element to be added</param>
    </member>
    <member name="M:EvilDICOM.Core.DICOMObject.FindAll(EvilDICOM.Core.Enums.VR)">
      <summary>
Finds all DICOM elements that match a VR type</summary>
      <returns>
a list of all elements that meet the search criteria</returns>
      <param name="vrToFind">
the VR type to find</param>
    </member>
    <member name="M:EvilDICOM.Core.DICOMObject.FindAll``1">
      <summary>
Finds all DICOM elements that match an element type</summary>
      <returns>
a list of all elements that are strongly typed</returns>
    </member>
    <member name="M:EvilDICOM.Core.DICOMObject.FindAll(System.String)">
      <summary>
Finds all DICOM elements that match a certain tag</summary>
      <returns>
a list of all elements that meet the search criteria</returns>
      <param name="tag">
the tag to find</param>
    </member>
    <member name="M:EvilDICOM.Core.DICOMObject.FindAll(EvilDICOM.Core.Element.Tag)">
      <summary>
Finds all DICOM elements that match a certain tag</summary>
      <returns>
a list of all elements that meet the search criteria</returns>
      <param name="tag">
the tag to find</param>
    </member>
    <member name="M:EvilDICOM.Core.DICOMObject.FindAll(System.String[])">
      <summary>
Finds all DICOM elements that are embedded in the DICOM structure in some particular location. This location is defined by descending tags from the outer most elements to the element. It is not necessary to include every tag in the descending "treelike" structure. Branches can be skipped.</summary>
      <returns>
a list of all elements that meet the search criteria</returns>
      <param name="descendingTags">
a string array containing in order the tags from the outer most elements to the element being searched for</param>
    </member>
    <member name="M:EvilDICOM.Core.DICOMObject.FindAll(EvilDICOM.Core.Element.Tag[])">
      <summary>
Finds all DICOM elements that are embedded in the DICOM structure in some particular location. This location is defined by descending tags from the outer most elements to the element. It is not necessary to include every tag in the descending "treelike" structure. Branches can be skipped.</summary>
      <returns>
a list of all elements that meet the search criteria</returns>
      <param name="descendingTags">
a tag array containing in order the tags from the outer most elements to the element being searched for</param>
    </member>
    <member name="M:EvilDICOM.Core.DICOMObject.FindFirst(System.String)">
      <summary>
Finds the first element in the entire DICOM structure that has a certain tag</summary>
      <returns>
one single DICOM element that is first occurence of the tag in the structure</returns>
      <param name="toFind">
the tag to be searched</param>
    </member>
    <member name="M:EvilDICOM.Core.DICOMObject.FindFirst(EvilDICOM.Core.Element.Tag)">
      <summary>
Finds the first element in the entire DICOM structure that has a certain tag</summary>
      <returns>
one single DICOM element that is first occurence of the tag in the structure</returns>
      <param name="toFind">
the tag to be searched</param>
    </member>
    <member name="M:EvilDICOM.Core.DICOMObject.Remove(System.String)">
      <param name="tag">
</param>
    </member>
    <member name="M:EvilDICOM.Core.DICOMObject.Replace``1(``0)">
      <summary>
Replaces a current instance of the DICOM element in the DICOM object. If the object does not exist, this method exits. For this scenario, please use ReplaceOrAdd().</summary>
      <param name="element">
the instance of the element</param>
    </member>
    <member name="M:EvilDICOM.Core.DICOMObject.ReplaceOrAdd``1(``0)">
      <summary>
Replaces a current instance of the DICOM element in the DICOM object. If the object does not exist, this method will add it to the object.</summary>
      <param name="element">
the instance of the element</param>
    </member>
    <member name="P:EvilDICOM.Core.DICOMObject.Elements">
      <summary>
The list of first level DICOM elements inside this DICOM object</summary>
    </member>
    <member name="P:EvilDICOM.Core.DICOMObject.AllElements">
      <summary>
The list of all DICOM elements at every level in the DICOM structure (includes sub-elements of sequences)</summary>
    </member>
    <member name="T:EvilDICOM.Core.Element.OtherByteString">
    </member>
    <member name="M:EvilDICOM.Core.Element.OtherByteString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.OtherByteString">OtherByteString</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.OtherByteString.#ctor(EvilDICOM.Core.Element.Tag,System.Byte[])">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.OtherByteString">OtherByteString</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.OtherByteString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Reading.DICOMElementReader">
      <summary>
Reads in DICOM elements from a DICOM object</summary>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMElementReader.ReadElementExplicitLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <summary>
Reads and returns the next DICOM element starting at the current location in the DICOM binary reader</summary>
      <returns>
the next DICOM element</returns>
      <param name="dr">
the binary reader which is reading the DICOM object</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMElementReader.ReadElementImplicitLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <summary>
Reads and returns the next DICOM element starting at the current location in the DICOM binary reader</summary>
      <returns>
the next DICOM element</returns>
      <param name="dr">
the binary reader which is reading the DICOM object</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMElementReader.ReadElementExplicitBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <summary>
Reads and returns the next DICOM element starting at the current location in the DICOM binary reader</summary>
      <returns>
the next DICOM element</returns>
      <param name="dr">
the binary reader which is reading the DICOM object</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMElementReader.SkipElementExplicitLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <param name="dr">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMElementReader.SkipElementImplicitLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <param name="dr">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMElementReader.SkipElementExplicitBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <param name="dr">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMElementReader.ReadAllElements(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)">
      <param name="dr">
</param>
      <param name="syntax">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMElementReader.ReadAllElementsImplicitLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <summary>
Reads and returns all elements in implicit little endian format</summary>
      <returns>
DICOM elements read</returns>
      <param name="dr">
the binary reader which is reading the DICOM object</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMElementReader.ReadAllElementsExplicitBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <summary>
Reads and returns all elements in explicit big endian format</summary>
      <returns>
DICOM elements read</returns>
      <param name="dr">
the binary reader which is reading the DICOM object</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMElementReader.ReadAllElementsExplicitLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <summary>
Reads and returns all elements in explilcit little endian format</summary>
      <returns>
DICOM elements read</returns>
      <param name="dr">
the binary reader which is reading the DICOM object</param>
    </member>
    <member name="T:EvilDICOM.Core.Extensions.IDICOMElementExtensions">
    </member>
    <member name="M:EvilDICOM.Core.Extensions.IDICOMElementExtensions.IsVR(EvilDICOM.Core.Interfaces.IDICOMElement,EvilDICOM.Core.Enums.VR)">
      <param name="elem">
</param>
      <param name="vr">
</param>
    </member>
    <member name="T:EvilDICOM.Core.IO.Reading.LengthReader">
      <summary>
Contains methods for reading the length of DICOM elements</summary>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.LengthReader.Read(EvilDICOM.Core.Enums.VR,EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)">
      <summary>
Reads the length from a series of bytes in a stream. The number of bytes is automatically determined from VR.</summary>
      <param name="vr">
the value representation of the element</param>
      <param name="dr">
the binary stream with a current position on the length parameter</param>
      <param name="syntax">
the transfer syntax of this element</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.LengthReader.ReadLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,System.Int32)">
      <summary>
Reads the length in little endian byte format from a series of bytes in a stream</summary>
      <returns>
the length</returns>
      <param name="dr">
the binary stream with a current position on the length parameter</param>
      <param name="length">
the number of bytes containing the length</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.LengthReader.ReadLittleEndian(EvilDICOM.Core.Enums.VR,EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <summary>
Reads the length in little endian byte format from a series of bytes in a stream. The number of bytes is automatically determined from VR.</summary>
      <param name="vr">
the value representation of the element</param>
      <param name="dr">
the binary stream with a current position on the length parameter</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.LengthReader.ReadBigEndian(EvilDICOM.Core.Enums.VR,EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <summary>
Reads the length in big endian byte format from a series of bytes in a stream. The number of bytes is automatically determined from VR.</summary>
      <param name="vr">
the value representation of the element</param>
      <param name="dr">
the binary stream with a current position on the length parameter</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.LengthReader.IsIndefinite(System.Int32)">
      <param name="length">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.LengthReader.ReadBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,System.Int32)">
      <summary>
Reads the length in big endian byte format from a series of bytes in a stream</summary>
      <returns>
the length</returns>
      <param name="dr">
the binary stream with a current position on the length parameter</param>
      <param name="length">
the number of bytes containing the length</param>
    </member>
    <member name="P:EvilDICOM.Core.Interfaces.IIOD.Elements">
      <summary>
Gets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Writing.VRWriter">
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.VRWriter.WriteVR(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.Interfaces.IDICOMElement)">
      <param name="dw">
</param>
      <param name="settings">
</param>
      <param name="toWrite">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.VRWriter.WriteVR(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.Enums.VR)">
      <param name="dw">
</param>
      <param name="settings">
</param>
      <param name="vr">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.UnsignedShort">
    </member>
    <member name="M:EvilDICOM.Core.Element.UnsignedShort.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.UnsignedShort">UnsignedShort</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.UnsignedShort.#ctor(EvilDICOM.Core.Element.Tag,System.Nullable{System.UInt16})">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.UnsignedShort">UnsignedShort</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.UnsignedShort.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Reading.DICOMObjectReader">
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMObjectReader.ReadObject(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)">
      <param name="dr">
</param>
      <param name="syntax">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMObjectReader.ReadObject(System.Byte[],EvilDICOM.Core.Enums.TransferSyntax)">
      <param name="objectBytes">
</param>
      <param name="syntax">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.SignedLong">
    </member>
    <member name="M:EvilDICOM.Core.Element.SignedLong.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.SignedLong">SignedLong</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.SignedLong.#ctor(EvilDICOM.Core.Element.Tag,System.Nullable{System.Int32})">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.SignedLong">SignedLong</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.SignedLong.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Element.CodeString">
    </member>
    <member name="M:EvilDICOM.Core.Element.CodeString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.CodeString">CodeString</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.CodeString.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.CodeString">CodeString</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.CodeString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Element.Sequence">
    </member>
    <member name="P:EvilDICOM.Core.Element.Sequence.Items">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Element.Sequence.Data">
      <summary>
Gets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Helpers.UIDHelper">
    </member>
    <member name="M:EvilDICOM.Core.Helpers.UIDHelper.GenerateUID">
    </member>
    <member name="M:EvilDICOM.Core.Helpers.UIDHelper.GenerateUID(System.String)">
      <param name="prefix">
</param>
    </member>
    <member name="M:EvilDICOM.Core.Helpers.UIDHelper.GenerateUID(System.String,System.String,System.String)">
      <param name="countryCode">
</param>
      <param name="vendorID">
</param>
      <param name="suffix">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Helpers.ISO3166Helper">
    </member>
    <member name="T:EvilDICOM.Core.Element.AgeString">
    </member>
    <member name="M:EvilDICOM.Core.Element.AgeString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.AgeString">AgeString</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.AgeString.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.AgeString">AgeString</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.AgeString.Age">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Element.AgeString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Element.Age">
    </member>
    <member name="P:EvilDICOM.Core.Element.Age.Number">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Element.Age.Units">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="N:EvilDICOM.Core.Dictionaries">
    </member>
    <member name="T:EvilDICOM.Core.Dictionaries.TagVRDictionary">
      <summary>
Interfaces with the DICOM Dictionary resource in order to look up VR types from tags, in the case implicit encoding is used</summary>
    </member>
    <member name="M:EvilDICOM.Core.Dictionaries.TagVRDictionary.#ctor">
      <summary>
Constructor</summary>
    </member>
    <member name="M:EvilDICOM.Core.Dictionaries.TagVRDictionary.GetVRFromTag(EvilDICOM.Core.Element.Tag)">
      <summary>
Finds a VR type from a given tag</summary>
      <returns>
the VR type for the tag</returns>
      <param name="tag">
the tag from which to find the VR type</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.PersonName">
    </member>
    <member name="M:EvilDICOM.Core.Element.PersonName.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.PersonName">PersonName</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.PersonName.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.PersonName">PersonName</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.PersonName.FirstName">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Element.PersonName.LastName">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Element.PersonName.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Element.PersonName.MiddleName">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Writing.DICOMWriteSettings">
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMWriteSettings.Default">
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMWriteSettings.GetFileMetaSettings">
    </member>
    <member name="P:EvilDICOM.Core.IO.Writing.DICOMWriteSettings.TransferSyntax">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.IO.Writing.DICOMWriteSettings.DoWriteIndefiniteSequences">
      <summary>
Gets or sets a value indicating whether .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Reading.SequenceItemReader">
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)">
      <param name="dr">
</param>
      <param name="syntax">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.SequenceItemReader.ReadBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)">
      <param name="dr">
</param>
      <param name="syntax">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)">
      <param name="dr">
</param>
      <param name="syntax">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.SequenceItemReader.SkipItemBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <param name="dr">
</param>
    </member>
    <member name="T:EvilDICOM.Core.IO.Data.DataComposer">
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.DataComposer.GetDataLittleEndian(EvilDICOM.Core.Interfaces.IDICOMElement)">
      <param name="el">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.DataComposer.GetStringBytes(EvilDICOM.Core.Enums.VR,EvilDICOM.Core.Interfaces.IDICOMElement)">
      <param name="vr">
</param>
      <param name="el">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.DataComposer.GetASCIIBytes(System.String)">
      <param name="s">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Extensions.IDICOMElementListExtensions">
    </member>
    <member name="M:EvilDICOM.Core.Extensions.IDICOMElementListExtensions.SortByTagID(System.Collections.Generic.List{EvilDICOM.Core.Interfaces.IDICOMElement})">
      <param name="elements">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Interfaces.IDICOMElement.Tag">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Writing.DataWriter">
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DataWriter.WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.Enums.VR,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.Interfaces.IDICOMElement)">
      <param name="dw">
</param>
      <param name="vr">
</param>
      <param name="settings">
</param>
      <param name="toWrite">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Helpers.ExceptionHelper">
    </member>
    <member name="T:EvilDICOM.Core.Element.SignedShort">
    </member>
    <member name="M:EvilDICOM.Core.Element.SignedShort.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.SignedShort">SignedShort</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.SignedShort.#ctor(EvilDICOM.Core.Element.Tag,System.Nullable{System.Int16})">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.SignedShort">SignedShort</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.SignedShort.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Writing.DICOMElementWriter">
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMElementWriter.WriteLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.Interfaces.IDICOMElement)">
      <param name="dw">
</param>
      <param name="settings">
</param>
      <param name="toWrite">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMElementWriter.WriteBigEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.Interfaces.IDICOMElement)">
      <param name="dw">
</param>
      <param name="settings">
</param>
      <param name="toWrite">
</param>
    </member>
    <member name="T:EvilDICOM.Core.IO.Data.LittleEndianReader">
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.LittleEndianReader.ReadTag(System.Byte[])">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.LittleEndianReader.ReadSinglePrecision(System.Byte[])">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.LittleEndianReader.ReadDoublePrecision(System.Byte[])">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.LittleEndianReader.ReadSignedLong(System.Byte[])">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.LittleEndianReader.ReadUnsignedLong(System.Byte[])">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.LittleEndianReader.ReadSignedShort(System.Byte[])">
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.LittleEndianReader.ReadUnsignedShort(System.Byte[])">
      <param name="data">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.Date">
    </member>
    <member name="M:EvilDICOM.Core.Element.Date.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.Date">Date</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.Date.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.Date">Date</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.Date.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Writing.SequenceItemWriter">
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.SequenceItemWriter.WriteItemsLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,System.Collections.Generic.List{EvilDICOM.Core.DICOMObject})">
      <param name="dw">
</param>
      <param name="settings">
</param>
      <param name="items">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.SequenceItemWriter.WriteItemsLittleEndian(EvilDICOM.Core.IO.Writing.DICOMWriteSettings,System.Collections.Generic.List{EvilDICOM.Core.DICOMObject})">
      <param name="settings">
</param>
      <param name="items">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.SequenceItemWriter.WriteItemLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject)">
      <param name="dw">
</param>
      <param name="settings">
</param>
      <param name="d">
</param>
    </member>
    <member name="T:EvilDICOM.Core.IO.Writing.GroupWriter">
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.GroupWriter.WriteGroupLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject,EvilDICOM.Core.Interfaces.IDICOMElement)">
      <param name="dw">
</param>
      <param name="settings">
</param>
      <param name="d">
</param>
      <param name="el">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.GroupWriter.IsGroupHeader(EvilDICOM.Core.Interfaces.IDICOMElement)">
      <param name="el">
</param>
    </member>
    <member name="T:EvilDICOM.Core.IO.Writing.DICOMFileWriter">
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMFileWriter.WriteLittleEndian(System.String,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject)">
      <param name="filePath">
</param>
      <param name="settings">
</param>
      <param name="toWrite">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMFileWriter.WriteLittleEndian(System.String,EvilDICOM.Core.DICOMObject)">
      <param name="filePath">
</param>
      <param name="toWrite">
</param>
    </member>
    <member name="T:EvilDICOM.Core.IO.Reading.DICOMFileReader">
      <summary>
Class for reading DICOM files</summary>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMFileReader.Read(System.String)">
      <summary>
Reads a DICOM file from a path</summary>
      <returns>
a DICOM object containing all elements</returns>
      <param name="filePath">
the path to the DICOM file</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMFileReader.Read(System.Byte[])">
      <summary>
Reads a DICOM file from a byte array</summary>
      <returns>
a DICOM object containing all elements</returns>
      <param name="fileBytes">
the bytes of the DICOM file</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMFileReader.ReadFileMetadata(System.String)">
      <summary>
Read the meta data from the DICOM object</summary>
      <returns>
a DICOM object containing the metadata elements</returns>
      <param name="filePath">
the path to the DICOM file</param>
    </member>
    <member name="T:EvilDICOM.Core.IO.Writing.DICOMObjectWriter">
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMObjectWriter.WriteObjectLittleEndian(EvilDICOM.Core.IO.Writing.DICOMBinaryWriter,EvilDICOM.Core.IO.Writing.DICOMWriteSettings,EvilDICOM.Core.DICOMObject)">
      <param name="dw">
</param>
      <param name="settings">
</param>
      <param name="d">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Writing.DICOMObjectWriter.IsFileMetaGroup(EvilDICOM.Core.Interfaces.IDICOMElement)">
      <param name="el">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.DateTime">
    </member>
    <member name="M:EvilDICOM.Core.Element.DateTime.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.DateTime">DateTime</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.DateTime.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.DateTime">DateTime</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.DateTime.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="N:EvilDICOM.Core.Modules">
    </member>
    <member name="T:EvilDICOM.Core.Modules.Patient">
    </member>
    <member name="P:EvilDICOM.Core.Modules.Patient.Elements">
      <summary>
Gets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Modules.Patient.Sex">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Modules.Patient.BirthDate">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Modules.Patient.ID">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Modules.Patient.Name">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Reading.DICOMPreambleReader">
      <summary>
This class can read the DICOM preamble consisting of 128 null bits followed by the ASCII characters DICM.</summary>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMPreambleReader.Read(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <summary>
Reads the first 132 bits of a file to check if it contains the DICOM preamble.</summary>
      <returns>
a boolean indicating whether or not the DICOM preamble was in the file</returns>
      <param name="dr">
a stream containing the bits of the file</param>
    </member>
    <member name="T:EvilDICOM.Core.Dictionaries.TagDictionary">
      <summary>
The class is used to look up tags in a dictionary for relevant information such as vr type.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Dictionaries.TagDictionary.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Dictionaries.TagDictionary">TagDictionary</see> class.</summary>
    </member>
    <member name="P:EvilDICOM.Core.Dictionaries.TagDictionary.Tags">
      <summary>
The tags in the dictionary. Must call initialize method to populate this list.</summary>
    </member>
    <member name="T:EvilDICOM.Core.Dictionaries.TagInfo">
      <summary>
A small class to hold the tag information as it comes in from the dictionary.</summary>
    </member>
    <member name="P:EvilDICOM.Core.Dictionaries.TagInfo.TagID">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Dictionaries.TagInfo.VRAbbreviation">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Dictionaries.TagInfo.VRType">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Dictionaries.TagInfo.Name">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Helpers.AbstractSyntax">
    </member>
    <member name="T:EvilDICOM.Core.Helpers.ArrayHelper">
    </member>
    <member name="M:EvilDICOM.Core.Helpers.ArrayHelper.Pop``1(``0[])">
      <param name="toPop">
</param>
    </member>
    <member name="M:EvilDICOM.Core.Helpers.ArrayHelper.AreEqual``1(``0[],``0[])">
      <summary>
A method that compares each object in two arrays to see if the arrays are equal</summary>
      <param name="array1">
the first array to be compared</param>
      <param name="array2">
the second array to be compared</param>
    </member>
    <member name="P:EvilDICOM.Core.Interfaces.IDICOMString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Element.ShortText">
    </member>
    <member name="M:EvilDICOM.Core.Element.ShortText.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.ShortText">ShortText</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.ShortText.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.ShortText">ShortText</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.ShortText.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Helpers.DoubleHelper">
    </member>
    <member name="M:EvilDICOM.Core.Helpers.DoubleHelper.GetSignificantDigitsPostDecimal(System.Double)">
      <param name="d">
</param>
    </member>
    <member name="M:EvilDICOM.Core.Helpers.DoubleHelper.BuildDICOMStringFormat(System.Double)">
      <param name="d">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Dictionaries.VRDictionary">
      <summary>
General purpose class for working with VRs. It contains methods to convert ASCII string abbreviations into VR type, the reverse, and a few more useful methods when working with VR enums.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromAbbreviation(System.String)">
      <summary>
Finds the VR type from an DICOM two letter abbreviation.</summary>
      <returns>
the VR type</returns>
      <param name="vrAbbreviation">
an DICOM two letter abbreviation</param>
    </member>
    <member name="M:EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromVR(EvilDICOM.Core.Enums.VR)">
      <summary>
Creates the DICOM two letter abbreviation from a VR type.</summary>
      <returns>
the DICOM two letter abbreviation</returns>
      <param name="vr">
the VR type</param>
    </member>
    <member name="M:EvilDICOM.Core.Dictionaries.VRDictionary.GetVRFromType(EvilDICOM.Core.Interfaces.IDICOMElement)">
      <summary>
Finds the VR enum from a specific DICOM element.</summary>
      <returns>
the VR type</returns>
      <param name="el">
the DICOM element</param>
    </member>
    <member name="M:EvilDICOM.Core.Dictionaries.VRDictionary.GetAbbreviationFromType(EvilDICOM.Core.Interfaces.IDICOMElement)">
      <summary>
Finds the VR enum from a specific DICOM element.</summary>
      <returns>
the VR abbreviation</returns>
      <param name="el">
the DICOM element</param>
    </member>
    <member name="M:EvilDICOM.Core.Dictionaries.VRDictionary.GetEncodingFromVR(EvilDICOM.Core.Enums.VR)">
      <summary>
Determines the encoding, meaning how many bytes to write the VR and length parameters, from a VR type. Options are explicit long (8 bytes), explicit short (4 bytes), or implicit (4 bytes). In UAB.RadOnc.Blazer, the null VR is used to represent an unknown VR (before dictionary lookup) that is implicitly encoded.</summary>
      <returns>
the encoding method for this type</returns>
      <param name="vr">
the VR type</param>
    </member>
    <member name="T:EvilDICOM.Core.IO.Data.DataPadder">
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.DataPadder.PadNull(System.Byte[])">
      <summary>
Pads null bytes around the data to make it even</summary>
      <param name="toPad">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.DataPadder.PadSpace(System.Byte[])">
      <summary>
Pads a space character around the data to make it even</summary>
      <param name="toPad">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.IntegerString">
    </member>
    <member name="M:EvilDICOM.Core.Element.IntegerString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.IntegerString">IntegerString</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.IntegerString.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.IntegerString">IntegerString</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.IntegerString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Reading.DICOMNetworkBinaryReader">
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMNetworkBinaryReader.#ctor(System.Net.Sockets.NetworkStream,System.Net.Sockets.Socket)">
      <summary>
Constructs a new reader from a stream.</summary>
      <param name="stream">
</param>
      <param name="socket">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMNetworkBinaryReader.Peek(System.Int32)">
      <param name="count">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMNetworkBinaryReader.Skip(System.Int32)">
      <param name="count">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMNetworkBinaryReader.ReadBytes(System.Int32)">
      <summary>
Reads the specified number of bytes. Will block until bytes are completely read (waiting on the network).</summary>
      <returns>
the read bytes</returns>
      <param name="count">
the number of bytes to be read</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMNetworkBinaryReader.Reset">
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.DICOMNetworkBinaryReader.ReadAllAvailable">
    </member>
    <member name="P:EvilDICOM.Core.IO.Reading.DICOMNetworkBinaryReader.StreamPosition">
      <summary>
Returns the current position of the byte stream</summary>
    </member>
    <member name="T:EvilDICOM.Core.Element.ApplicationEntity">
    </member>
    <member name="M:EvilDICOM.Core.Element.ApplicationEntity.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.ApplicationEntity">ApplicationEntity</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.ApplicationEntity.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.ApplicationEntity">ApplicationEntity</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.ApplicationEntity.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Reading.SequenceReader">
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.SequenceReader.ReadIndefiniteLengthLittleEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader,EvilDICOM.Core.Enums.TransferSyntax)">
      <param name="dr">
</param>
      <param name="syntax">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.SequenceReader.ReadIndefiniteLengthBigEndian(EvilDICOM.Core.IO.Reading.DICOMBinaryReader)">
      <param name="dr">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Reading.SequenceReader.ReadItems(System.Byte[],EvilDICOM.Core.Enums.TransferSyntax)">
      <param name="data">
</param>
      <param name="syntax">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.UnsignedLong">
    </member>
    <member name="M:EvilDICOM.Core.Element.UnsignedLong.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.UnsignedLong">UnsignedLong</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.UnsignedLong.#ctor(EvilDICOM.Core.Element.Tag,System.Nullable{System.UInt32})">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.UnsignedLong">UnsignedLong</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.UnsignedLong.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Element.ShortString">
    </member>
    <member name="M:EvilDICOM.Core.Element.ShortString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.ShortString">ShortString</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.ShortString.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.ShortString">ShortString</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.ShortString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Data.DataRestriction">
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.DataRestriction.EnforceLengthRestriction(System.UInt32,System.String)">
      <param name="lengthLimit">
</param>
      <param name="data">
</param>
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.DataRestriction.EnforceEvenLength(System.Byte[],EvilDICOM.Core.Enums.VR)">
      <param name="data">
</param>
      <param name="vr">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.DecimalString">
    </member>
    <member name="M:EvilDICOM.Core.Element.DecimalString.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.DecimalString">DecimalString</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.DecimalString.#ctor(EvilDICOM.Core.Element.Tag,System.String)">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.DecimalString">DecimalString</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.DecimalString.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.IO.Data.BigEndianReader">
    </member>
    <member name="M:EvilDICOM.Core.IO.Data.BigEndianReader.AttributeTag(EvilDICOM.Core.Element.Tag,System.Byte[])">
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Helpers.TagSorter">
    </member>
    <member name="M:EvilDICOM.Core.Helpers.TagSorter.Compare(EvilDICOM.Core.Interfaces.IDICOMElement,EvilDICOM.Core.Interfaces.IDICOMElement)">
      <param name="el1">
</param>
      <param name="el2">
</param>
    </member>
    <member name="T:EvilDICOM.Core.Element.FloatingPointDouble">
    </member>
    <member name="M:EvilDICOM.Core.Element.FloatingPointDouble.#ctor">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.FloatingPointDouble">FloatingPointDouble</see> class.</summary>
    </member>
    <member name="M:EvilDICOM.Core.Element.FloatingPointDouble.#ctor(EvilDICOM.Core.Element.Tag,System.Nullable{System.Double})">
      <summary>
Initializes a new instance of the <see cref="T:EvilDICOM.Core.Element.FloatingPointDouble">FloatingPointDouble</see> class.</summary>
      <param name="tag">
</param>
      <param name="data">
</param>
    </member>
    <member name="P:EvilDICOM.Core.Element.FloatingPointDouble.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Modules.FileMetadata">
    </member>
    <member name="P:EvilDICOM.Core.Modules.FileMetadata.ImplementationClassUID">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Modules.FileMetadata.MediaStorageSOPInstanceUID">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Modules.FileMetadata.GroupLength">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Modules.FileMetadata.MediaStorageSOPClassUID">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Modules.FileMetadata.PrivateInfoCreatorUID">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Modules.FileMetadata.InfoVersion">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Modules.FileMetadata.ImplementationVersionName">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Modules.FileMetadata.PrivateInfo">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Modules.FileMetadata.SourceApplicationEntityTitle">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Modules.FileMetadata.Elements">
      <summary>
Gets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Modules.FileMetadata.TransferSyntaxUID">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Element.AbstractElement">
    </member>
    <member name="M:EvilDICOM.Core.Element.AbstractElement.ToString">
    </member>
    <member name="P:EvilDICOM.Core.Element.AbstractElement.Tag">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:EvilDICOM.Core.Element.AbstractElement.VR">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:EvilDICOM.Core.Helpers.TagHelper">
    </member>
  </members>
</doc>
